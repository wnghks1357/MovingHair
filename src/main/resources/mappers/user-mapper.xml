<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.moving.mapper.UserMapper">
	<!-- 
	<resultMap type="userRvo" id="userRvoMap">
		<result column="USER_ID" property="userId" />
	</resultMap>
	 -->
	
	<select id="idJungbokCheck" parameterType="userVo" resultType="Integer">
		SELECT COUNT(*) FROM mh_user WHERE USER_ID = #{userId}
	</select>
	
	<select id="phoneJungbokCheck" parameterType="userVo" resultType="Integer">
		
		<!-- 사용자 정보 수정인 경우 -->
		<if test="userId != null">
		<!-- 사용자 번호가 아닌 번호 중에 파라미터 번호와 일치하는 번호의 개수 -->
			SELECT COUNT(*)
			FROM mh_user
			WHERE USER_PHONE IN (SELECT USER_PHONE FROM mh_user WHERE USER_ID != #{userId})
			AND USER_PHONE = #{userPhone}
		</if>
		
		<!-- 회원가입인 경우 -->
		<if test="userId == null">
			SELECT COUNT(*) FROM mh_user WHERE USER_PHONE = #{userPhone}
		</if>
		
		
	</select>
	
	<insert id="joinProc" parameterType="userVo">
		INSERT INTO mh_user(
								USER_ID
								, USER_PWD
								, USER_TYPE
								, USER_NAME
								, USER_PHONE
								, USER_EMAIL
								, USER_STATUS
								, USER_ZIP
								, USER_ADDR1
								, USER_ADDR2
								, USER_BIRTHDAY
								, USER_SEX
								, RECEIVE_EMAIL
								, RECEIVE_SMS
								, CREATED_TYPE
								, MOVING_AGREE
								, PRIVATE_INFO_AGREE
								, LOCATION_AGREE
								, PROMOTION_AGREE
								, CREATED__DATE
								, UPDATE_DATE
								, LOGIN_DATE
							) VALUES (
									 #{userId}
									, #{userPwd}
									, #{userType}
									, #{userName}
									, #{userPhone}
									, #{userEmail}
									, 'A'
									, #{userZip}
									, #{userAddr1}
									, #{userAddr2}
									, #{userBirthday}
									, #{userSex}
									, 'Y'
									, 'Y'
									, 'M'
									, #{movingAgree}
									, #{privateInfoAgree}
									, #{locationAgree}
									, #{promotionAgree}
									, NOW()
									, NOW()
									, NOW()
								)
								
	</insert>
	
	<!-- 회원가입 직후 메인 페이지로 이동할 때 session에 userNo를 넣기 위한 select문 -->
	<select id="selectUserNo" parameterType="String" resultType="Integer">
		SELECT USER_NO AS userNo FROM mh_user WHERE USER_ID = #{userId}
	</select>
	
	<!-- 디자이너 선호지역 정보 insert -->
	<insert id="insertRegDesignLounge" parameterType="designLoungeVo">
		INSERT INTO mh_design_lounge(
			USER_ID,
			ADDR1,
			ADDR2,
			ADDR3,
			ADDR4,
			ADDR5
		) VALUES (
			#{userId },
			#{preferAddr1 },
			#{preferAddr2 },
			#{preferAddr3 },
			#{preferAddr4 },
			#{preferAddr5 }
		)		
	</insert>
	
	<insert id="insertJoinPoint" parameterType="userVo">
		INSERT INTO mh_point (
			USER_NO,
			USER_POINT,
			POINT_LOG,
			POINT_COUNT,
			CREATE_DATE,
			UPDATE_DATE
		) VALUES (
			(SELECT MAX(USER_NO) AS userNo FROM mh_user ),
			1000,
			'A',
			1000,
			NOW(),
			NOW()
		)
	</insert>

	<select id="loginProc" parameterType="userVo" resultType="userVo">
		SELECT USER_NO AS userNo, USER_ID AS userId, USER_TYPE AS userType, USER_STATUS AS userStatus FROM mh_user WHERE USER_ID = #{userId} AND USER_PWD = #{userPwd}
	</select>
	
	<update id="updateLoginDate" parameterType="String">
		UPDATE mh_user SET LOGIN_DATE = NOW() WHERE USER_ID = #{userId}
	</update>
	
	<!-- 회원탈퇴 -->
	<update id="outMember" parameterType="userVo">
		UPDATE mh_user
			<trim prefix="SET" suffixOverrides=",">
				<if test="outReason != null and outReason != ''">
					USER_STATUS = 'O',
					OUT_REASON = #{outReason},
					OUT_DATE = NOW()
				</if>
			</trim>
		WHERE USER_ID = #{userId}
	</update>
 
 	<!-- <select id="reservList" resultType="reservVo">
 		SELECT RESERV_ID AS reservId, DESIGNER_ID AS designerId, RESERV_DATE AS reservDate, CHANGE_COUNT AS changeCount FROM mh_reserv
 	</select> -->
 	
 	<select id="idSearchProc" parameterType="userVo" resultType="String">
 		SELECT USER_ID AS userId FROM mh_user WHERE USER_NAME = #{userName} AND USER_PHONE = #{userPhone}
 	</select>
 	
 	<select id="pwdSearchProc" parameterType="userVo" resultType="String">
 		SELECT USER_ID AS userId FROM mh_user WHERE USER_NAME = #{userName} AND USER_PHONE = #{userPhone} AND USER_ID = #{userId}
 	</select>
 	
 	<!-- 마이페이지 정보  -->
 	<select id="getUserInfo" parameterType="String" resultType="userVo">
 		SELECT 
 			  USER_ID AS userId
 			, USER_TYPE AS userType
 			, USER_NAME AS userName
 			, USER_PWD AS userPwd
 			, USER_PHONE AS userPhone
 			, USER_EMAIL AS userEmail
 			, USER_ZIP AS userZip
 			, USER_ADDR1 AS userAddr1
 			, USER_ADDR2 AS userAddr2
 			FROM mh_user 
 			WHERE USER_ID = #{userId}
 	</select>
 	
 	<!-- 마이 포인트 정보 -->
	<select id="selectMyPointList" parameterType="pointVo" resultType="pointVo">
		SELECT 
			USER_NO AS userNo
			, USER_POINT AS userPoint
			, POINT_LOG AS pointLog
			, POINT_COUNT AS pointCount
			, CREATE_DATE AS createDate
			, UPDATE_DATE AS updateDate
		FROM mh_point
		WHERE USER_NO = #{userNo}
		<if test="startDate != null and startDate != '' and endDate != null and endDate != ''">
			AND UPDATE_DATE BETWEEN #{startDate} AND #{endDate}
		</if>
		<if test="srchTerm != null and srchTerm != '' and startDate == '' and endDate ==''">
			 AND UPDATE_DATE >= #{srchTerm}
		</if>
		LIMIT #{start}, #{listCnt}
	</select>
	
	<select id="myPointListCnt" parameterType="Integer" resultType="Integer">
		SELECT 
			COUNT(*)
		FROM mh_point
	 WHERE USER_NO = #{userNo}
	 <if test="startDate != null and startDate != '' and endDate != null and endDate != ''">
		AND UPDATE_DATE BETWEEN #{startDate} AND #{endDate}
	</if>
	<if test="srchTerm != null and srchTerm != '' and startDate == '' and endDate ==''">
		 AND UPDATE_DATE >= #{srchTerm}
	</if>
	</select>
 	
 	<!-- 패스워드 변경시 기존 패스워드 일치여부 확인 -->
 	<select id="checkUserPwd" parameterType="userVo" resultType="Integer">
 		SELECT COUNT(*) FROM mh_user WHERE USER_ID = #{userId} AND USER_PWD = #{oldUserPwd}
 	</select>
 	
 	<!-- 패스워드 변경 -->
 	<update id="updatePwd" parameterType="userVo">
 		UPDATE mh_user SET USER_PWD = #{userPwd} WHERE USER_ID = #{userId}
 	</update>
 	
 	<!-- 회원정보 수정 -->
 	<update id="myInfoUpdate" parameterType="userVo">
 	
		UPDATE
		    mh_user
		    <trim prefix="SET" suffixOverrides=",">
		        <if test='userName        != null'>USER_NAME        = #{userName},       </if>
		        <if test='userPhone       != null'>USER_PHONE       = #{userPhone},      </if>
		        <if test='userEmail        != null'>USER_EMAIL        = #{userEmail},       </if>
		        <if test='userZip       != null'>USER_ZIP       = #{userZip},      </if>
		        <if test='userAddr1      != null'>USER_ADDR1      = #{userAddr1},     </if>
		        <if test='userAddr2     != null'>USER_ADDR2     = #{userAddr2},    </if>
		    </trim>
		WHERE   USER_ID = #{userId}
 	
 	</update>
 	
 	
 	
</mapper>